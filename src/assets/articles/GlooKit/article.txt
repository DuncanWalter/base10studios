<p></p>

<p>The Gloo Kit, or Gloo, is our medley of libraries for native Java application development. It has two main components, which may be used independently or in conjunction. The first is an OpenGL rendering engine built around observers and concurrency. The second is an input and markup library for rapid app development. We are still in the pre-alpha stage of development, and our current feature set is improving rapidly.</p>

<hr>

<p>The OpenGL rendering portion of Gloo favors code over configuration in order to provide easy-to-learn access to all the tricks of OpenGL. Gloo handles vexing parts of working with OpenGL—text, textures, and concurrency—by wrapping them in a friendly, high-level API. This includes font loading, texture atlassing, and much more. Using Gloo, classic and intricate OpenGL rendering techniques can be chained together to run in sequences of any complexity. Gloo also comes equipped with lightning fast tools for multithreading those sequences for bulk rendering and heavy lifting. Supporting Windows, Linux, and Mac computers, Gloo also runs on most platforms. In the future, we hope to incorporate ReactiveX and target mobile devices.</p>

<p>The input and markup component of Gloo is designed to unify the utility of SPA applications with the flexibility of OpenGL rendering. The component-based markup seen in web development frameworks is natural to Java, as are the computations typically handled by Javascript in the browser. So, we brought them under the same umbrella and added an event based input handler. The resulting mashup is both flexible and powerful, though we are still hammering out good conventions for it. Complete with tools for managing windows and their settings, Gloo allows for fast app development that doesn't compromise on flexibility. It is also allows for extension and customization only artificially present in web design. It is, however, fundamentally different from a browser as the display state is not intrinsically bound to a markup document. The consequences of this pattern are still obscured, so we have contained it to a separate module and are proceeding cautiously. In the future, we plan to address dynamic stylings and animations as well as custom element attributes.</p>

<hr>

<p>Our current version of gloo is hosted on Git Hub, and its documentation is hosted
	<a href="../../assets/javadocs/javadocs" target="_blank"><b>HERE</b></a>.
</p>
